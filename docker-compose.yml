version: '3'
services:
  db:
    container_name: order-sys-db
    image: mysql:latest
    platform: linux/x86_64
    environment:
      - MYSQL_ROOT_HOST=${DB_ROOT_HOST}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - TZ=${TZ}
    ports:
      - '3306:3306'
    volumes:
      - ./db/conf:/etc/mysql/conf.d/:ro
      - mysqldata:/var/lib/mysql
      - ./db/logs:/var/log/mysql
    networks:
      - backend
  node:
    container_name: order-sys-backend
    image: node:latest
    environment:
      - MYSQL_SERVER=order-sys-db
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_DATABASE=${DB_NAME}
      - TZ=${TZ}
      - CHOKIDAR_USEPOLLING=true
    tty: true
    ports:
      - '3000:3000'
    volumes:
      - ./node:/app
      - back_node_modules:/app/node_modules
    working_dir: /app
    command: bash -c "npm install && npm run dev"
    networks:
     - backend
    depends_on:
     - db 
  next:
    container_name: order-sys-frontend
    image: node:latest
    environment:
      - CHOKIDAR_USEPOLLING=true
    tty: true
    ports:
      - '8000:8000'
    volumes:
      - ./next:/app
      - front_node_modules:/app/node_modules
      - front_cache_modules:/app/.next
    working_dir: /app
    command: bash -c "yarn && yarn dev"
    networks:
     - backend
    depends_on:
     - node

networks:
  backend:

volumes:
  mysqldata:
  front_node_modules:
  front_cache_modules:
  back_node_modules:
    